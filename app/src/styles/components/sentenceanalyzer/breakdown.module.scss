@import '@/styles/variables.module.scss'; 

@mixin word-type-colors {
    @each $type, $color in $word-types {
        &[data-role="#{$type}"] {
            color:$color;

            &.locked {
                &:not(.whitespace)::after {
                    display: block;
                    background-color: rgba($color, 0.2);
                    border: 2px solid $color;
                    animation:pop 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
                    filter:brightness(1.3);
                    box-shadow:0 0 10px 0 $color;
                }
            }
        }
    }
}

@mixin word-type-color-hover {
    @each $type, $color in $word-types {
        &[data-role="#{$type}"] {
            &:not(.whitespace)::after {
                display: block;
                background-color: rgba($color, 0.2);
                border: 2px solid $color;
                animation:pop 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            }
        }
    }
}

.breakdown {
	margin-top: 2.5rem;
	font-size: 2.3rem;
	display: flex;
	justify-content: center;
	align-items: center;
	position: relative;
	padding: 1rem;

	width:100%;

	.breakdownContent {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
		justify-content: center;
		align-items: center;
	}

	.sentenceItemContainer {
		display: flex;
		gap: 0.5rem;
		position: relative;
	}

	.sentenceItem {
		padding: 0 0.5rem;
		margin:0 0.2rem;
		border-radius: 0.25rem;
		margin: 0;
		cursor: pointer;
		position: relative;
		z-index: 1;
		font-family:var(--font-kr-serif);
		font-size:2.6rem;

		&::after {
			position: absolute;
			content: '';
			top: 0;
			left: 50%;
			transform: translateX(-50%);
			width: calc(100%);
			height: 100%;
			border-radius: 0.25rem;
			display:none;
			pointer-events: none;
			z-index: -1;

		}
		@include word-type-colors;

		&:hover:not(.locked) {
			transform: none;
			@include word-type-color-hover;
		}

		&.whitespace::after {
			display: none !important;
		}
	}
}

@keyframes pop {
	0% { 
		transform: translate(-50%, 15px) scale(0.9); 
		opacity: 0; 
	}
	100% { 
		transform: translate(-50%, 0) scale(1); 
		opacity: 1; 
	}
}